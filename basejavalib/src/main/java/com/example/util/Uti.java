package com.example.util;import java.io.File;import java.io.FileInputStream;import java.math.BigInteger;import java.security.MessageDigest;/** * author: moon * created on: 18/1/25 上午11:27 * description: */public class Uti {    public static void main(String[] args) {//        File file = new File("/Users/moon/Downloads/_download/hongyuanyun_release_doingnow_v3.3.2.apk");//        String s = getFileSha1(file);//        String p = "0fc51d37745b626a8d6019cb1fb327c5da518e0d";//        System.out.println(">>"+p.length());//        System.out.println(s+">>");        String partPort = "11234567";        System.out.println(isPassPort(partPort));    }    /**     * 校验护照     *     * @param value     * @return     */    public static boolean isPassPort(String value) {        if (value == null || "".equals(value)){            return false;        }        if (value.length() <8 || value.length() > 9){            return false;        }        if (!Character.isLetter(value.charAt(0))){            return false;        }        boolean isDigit = true;        for (int i = 1; i < value.length(); i++) {            if (!Character.isDigit(value.charAt(i))) {   //用char包装类中的判断数字的方法判断每一个字符                isDigit = false;            }        }        return isDigit;    }    /**     * 获取文件 sha1 值     *     * @param file     * @return s     */    public static String getFileSha1(File file) {        if (!file.isFile()) {            return null;        }        MessageDigest digest = null;        FileInputStream in = null;        byte buffer[] = new byte[8192];        int len;        try {            digest = MessageDigest.getInstance("SHA-1");            in = new FileInputStream(file);            while ((len = in.read(buffer)) != -1) {                digest.update(buffer, 0, len);            }            BigInteger bigInt = new BigInteger(1, digest.digest());            String sha1Value = bigInt.toString(16);            int length = sha1Value.length();            if (length == 40){                return sha1Value;            }else {                int last = 40-length;                StringBuilder sb = new StringBuilder();                for (int i=0;i<last;i++){                    sb.append("0");                }                return sb.toString()+sha1Value;            }        } catch (Exception e) {            e.printStackTrace();            return null;        } finally {            try {                in.close();            } catch (Exception e) {                e.printStackTrace();            }        }    }}