apply plugin: 'com.android.application'

android {
    compileSdkVersion 26
    buildToolsVersion '27.0.3'
//    buildToolsVersion '25.0.0'
    defaultConfig {
        applicationId "com.moon.samples"
        minSdkVersion 24
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        externalNativeBuild {
            cmake {
                cppFlags ""
            }
        }

        ndk {
            moduleName "libencrypt" //生成的so名字
            ldLibs "log", "z", "m"
            abiFilters "armeabi", "armeabi-v7a", "x86"  //输出指定三种abi体系结构下的so库。
        }

        javaCompileOptions {
            annotationProcessorOptions {
                includeCompileClasspath true
            }
        }

        vectorDrawables.useSupportLibrary = true
        multiDexEnabled true
//        jackOptions {
//            enabled true   //启用jack编译器
//        }

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName()]
            }
        }

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }

    lintOptions {
        abortOnError false
    }

    //添加插件  databinding
    dataBinding {
        enabled = true
    }

    dexOptions {
        javaMaxHeapSize "4g"
        preDexLibraries = false
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
//        exclude group: 'com.android.support', module: 'support-annotations'
//        exclude group: 'com.android.support'
    })
    implementation project(':annotationlib')
    implementation project(':basejavalib')
    // 加载更多
    implementation project(':xultrarecycle')
//    implementation 'com.doing.viewcomponent.xultrarecycle:xultrarecycle:1.0.0'

    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    implementation 'com.android.support:recyclerview-v7:26.1.0'
    //    implementation 'com.android.support:appcompat-v7:26.1.0'
//    implementation 'com.github.wendux:DSBridge-Android:2.0-SNAPSHOT'
    implementation 'org.jsoup:jsoup:1.10.1'
    implementation 'com.youth.banner:banner:1.4.9'
    implementation 'com.github.bumptech.glide:glide:3.7.0'
    implementation 'io.reactivex.rxjava2:rxjava:2.0.7'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
    implementation 'com.squareup.retrofit2:retrofit:2.2.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.2.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.2.0'
    implementation 'com.android.support:design:26.1.0'
    implementation 'com.komi.slider:slider:0.4.0'
    implementation 'com.mylhyl:commonrefreshlayout:2.0'
    implementation 'in.srain.cube:ultra-ptr:1.0.11'
    testImplementation 'junit:junit:4.12'
    compileOnly 'com.android.support:support-v4:26.1.0'
    implementation 'com.android.support:multidex:1.0.1'
    // elemers 跨进程通讯
    implementation 'xiaofei.library:hermes-eventbus:0.3.0'
    implementation 'android.arch.lifecycle:runtime:1.0.3'
    implementation 'android.arch.lifecycle:extensions:1.0.0-rc1'
    implementation 'android.arch.persistence.room:runtime:1.0.0-rc1'
    annotationProcessor 'android.arch.lifecycle:compiler:1.0.0-rc1'
    annotationProcessor 'android.arch.persistence.room:compiler:1.0.0-rc1'

    implementation 'com.alibaba:arouter-api:1.3.0'
    annotationProcessor 'com.alibaba:arouter-compiler:1.1.4'

    implementation 'com.liulishuo.filedownloader:library:1.6.9'
//    implementation 'com.tbruyelle.rxpermissions:rxpermissions:0.9.4@aar'
    implementation 'com.tbruyelle.rxpermissions2:rxpermissions:0.8.2@aar'
    //leakcanary
    //leakcanary
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.5.4'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.4'
    implementation project(':perfect-mvp')
    implementation project(':arouter_moudle')

//    implementation 'com.alibaba:arouter-api:1.3.0'
//    annotationProcessor 'com.alibaba:arouter-compiler:1.1.4'
}


public class BuildTimeListener implements TaskExecutionListener, BuildListener {
    private Clock clock
    private times = []

    @Override
    void beforeExecute(Task task) {
        clock = new org.gradle.util.Clock()
    }

    @Override
    void afterExecute(Task task, TaskState taskState) {
        def ms = clock.timeInMs
        times.add([ms, task.path])

        //task.project.logger.warn "${task.path} spend ${ms}ms"
    }

    @Override
    void buildStarted(Gradle gradle) {

    }

    @Override
    void settingsEvaluated(Settings settings) {

    }

    @Override
    void projectsLoaded(Gradle gradle) {

    }

    @Override
    void projectsEvaluated(Gradle gradle) {

    }

    @Override
    void buildFinished(BuildResult result) {
        println "Task spend time:"
        for (time in times) {
            if (time[0] >= 50) {
                printf "%7sms  %s\n", time
            }
        }
    }

}









